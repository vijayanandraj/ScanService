import smtplib

   def test_smtp_connection(host, port):
       try:
           with smtplib.SMTP(host, port, timeout=10) as server:
               server.ehlo()
               print(f"Successfully connected to {host} on port {port}")
               return True
       except Exception as e:
           print(f"Failed to connect to {host} on port {port}")
           print(f"Error: {str(e)}")
           return False

   if __name__ == "__main__":
       test_smtp_connection("amtastage.boa.com", 25)

import smtplib
from email.mime.text import MIMEText
from email.mime.multipart import MIMEMultipart

def send_anonymous_email(subject, body, to_recipients, cc_recipients=None):
    # SMTP server details
    smtp_server = "amtastage.boa.com"
    smtp_port = 25

    # Create message
    msg = MIMEMultipart()
    msg['Subject'] = "Re: " + subject
    msg['From'] = "noreply@example.com"  # This can be any address, as it's anonymous
    msg['To'] = ", ".join(to_recipients)
    if cc_recipients:
        msg['Cc'] = ", ".join(cc_recipients)

    # Add body to email
    msg.attach(MIMEText(body, 'plain'))

    # Connect to the SMTP server and send the email
    try:
        with smtplib.SMTP(smtp_server, smtp_port) as server:
            # If the server requires STARTTLS, uncomment the next line
            # server.starttls()

            recipients = to_recipients + (cc_recipients if cc_recipients else [])
            server.sendmail(msg['From'], recipients, msg.as_string())
        print("Mail Sent")
    except Exception as e:
        print(f"Failed to send email: {str(e)}")

# Example usage
subject = "Your original subject"
body = "Thank you for reaching out to Enterprise Developer Tooling. A ticket has been created for your reference https://jira3.hon..."
to_recipients = ["recipient@example.com"]
cc_recipients = ["cc_recipient@example.com"]

# Remove specific recipients
recipients_to_remove = ['edt-service@bofa.com']
filtered_to_recipients = [rec for rec in to_recipients if rec not in recipients_to_remove]
filtered_cc_recipients = [rec for rec in cc_recipients if rec not in recipients_to_remove] if cc_recipients else None

send_anonymous_email(subject, body, filtered_to_recipients, filtered_cc_recipients)